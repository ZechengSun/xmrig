name: Build Static XMRig

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发
  release:
    types: [created]  # 在发布时上传

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
          base-devel

    - name: Build libuv (static, no test)
      shell: msys2 {0}
      run: |
        git clone https://github.com/libuv/libuv.git
        cd libuv
        mkdir build && cd build
        cmake .. -G "MinGW Makefiles" -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF
        cmake --build . --config Release
        # 转换为 Windows 风格路径
        echo "LIBUV_INCLUDE=$(pwd | sed 's|/c/|C:/|' | sed 's|/|\\|g')\\..\\include" >> $GITHUB_ENV
        echo "LIBUV_STATIC=$(pwd | sed 's|/c/|C:/|' | sed 's|/|\\|g')\\Release\\libuv.a" >> $GITHUB_ENV

    - name: Build XMRig
      shell: msys2 {0}
      run: |
        mkdir build && cd build
        cmake .. -G "MinGW Makefiles" \
          -DCMAKE_BUILD_TYPE=Release \
          -DWITH_HWLOC=OFF \
          -DBUILD_SHARED_LIBS=OFF \
          -DUV_INCLUDE_DIR="$LIBUV_INCLUDE" \
          -DUV_LIBRARY="$LIBUV_STATIC" \
          -DCMAKE_EXE_LINKER_FLAGS="-static"
        cmake --build . --config Release

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: xmrig-static
        path: build/xmrig.exe

    - name: Upload to GitHub Release
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: build/xmrig.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
